#game initialisation
import pygame

FPS = 60
screen_width = 800
screen_height = 600
screen = pygame.display.set_mode((screen_width, screen_height))
pygame.display.set_caption("Retro Racer")
clock = pygame.time.Clock()

#images
up_straight = pygame.image.load("straight 2.png")
along_straight = pygame.image.load("straight 1.png")
t_three = pygame.image.load("curve 3.png")
t_two = pygame.image.load("curve 2.png")
t_one = pygame.image.load("curve 1.png")
t_four = pygame.image.load("curve 4.png")

car_one = pygame.image.load("pitstop_car_1.png")
car_one = pygame.transform.scale(car_one, (40, 80))
car_one = pygame.transform.rotate(car_one, 180)
#draw an image onto the screen in the desired position
#must have image variable before calling the function
#however this will scale the image
def draw_image(image, x_position, y_position):
    image = pygame.transform.scale(image, (screen_width, screen_height))
    screen.blit(image, (x+x_position, y+y_position))

def draw_all():
    draw_image(up_straight, 0, 0)
    draw_image(t_three, 0, -600)
    draw_image(t_two, 800, -600)
    draw_image(t_three, 800, -1200)
    draw_image(t_one, 1600, -1200)
    draw_image(up_straight, 1600, -600)
    draw_image(up_straight, 1600, 0)
    draw_image(up_straight, 1600, 600)
    draw_image(up_straight, 1600, 1200)
    draw_image(t_two, 1600, 1800)
    draw_image(t_four, 800, 1800)
    draw_image(up_straight, 800, 1200)
    draw_image(t_one, 800, 600)
    draw_image(t_four, 0, 600)

x = 0
y = 0
direction = 0

running = True
while running == True:

    clock.tick(FPS)
    keys = pygame.key.get_pressed()
    start_direction = direction
    # Potential issue - the more I press the keys the more lagged, slow and broken the game is.
    if keys[pygame.K_w]:
        y += 10
        direction = 0
    if keys[pygame.K_s]:
        y -= 10
        direction = 180
    if keys[pygame.K_a]:
        x += 10
        direction = 90
    if keys[pygame.K_d]:
        x -= 10
        direction = 270

    if keys[pygame.K_w] and keys[pygame.K_a]:
            direction = 45
    if keys[pygame.K_s] and keys[pygame.K_a]:
            direction = 135
    if keys[pygame.K_w] and keys[pygame.K_d]:
            direction = 315
    if keys[pygame.K_s] and keys[pygame.K_d]:
            direction = 225

    direction_change = direction - start_direction
    car_one = pygame.transform.rotate(car_one, direction_change)

    car_rect = car_one.get_rect(center = (400,300))
    #if I decide to do diagonals then change direction to 0-360
    #and remove the multiple. Also change the 'ifs' back to 'elifs'

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    screen.fill((255, 255, 255))
    draw_all()
    screen.blit(car_one, car_rect)

    pygame.display.flip()
    pygame.display.update()

pygame.quit()
